@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');

body {
    font-family: 'Roboto', Arial, sans-serif;
    margin: 0;
    padding: 20px 0;
    background-color: #f4f7f6;
    min-height: 100vh;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: #333;
    line-height: 1.6;
}

.container {
    width: 100%;
    max-width: 900px;
    margin: 40px auto;
    padding: 30px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

h1, h2, h3 {
    color: #333;
    margin-top: 0;
}

h1 {
    text-align: center;
    color: #2c3e50;
    margin-bottom: 30px;
}

h2 {
    color: #34495e;
    border-bottom: 2px solid #ecf0f1;
    padding-bottom: 10px;
    margin-bottom: 25px;
}

h3 {
    color: #34495e;
    margin-bottom: 15px;
}

.form-group {
    margin-bottom: 30px;
    padding: 20px;
    border: 1px solid #e0e0e0;
    border-radius: 6px;
    background-color: #fdfdfd;
}

.form-group label {
    margin-right: 10px;
    font-weight: 500;
    color: #555;
    display: inline-block;
    margin-bottom: 5px;
}

/* Styling for coefficients (objective function) */
.coefficients {
    display: flex;
    flex-wrap: wrap; /* Allow wrapping */
    align-items: center;
    gap: 10px; /* Gap between label-input pairs */
    margin-bottom: 15px;
}
.coefficients label {
    margin-bottom: 0;
}


/* Styling for constraints section - CSS ONLY CHANGES */
.constraint {
    display: flex;         /* Use flexbox for layout */
    flex-wrap: wrap;       /* Allow items to wrap to the next line */
    align-items: center;   /* Align items vertically */
    gap: 5px 8px;          /* row-gap column-gap for wrapped items */
    margin-bottom: 20px;   /* Space between constraint lines */
    padding-bottom: 15px;  /* Padding at the bottom of each constraint */
    border-bottom: 1px dashed #eee; /* Separator for multiple constraints */
}
.constraint:last-child {
    border-bottom: none;
    margin-bottom: 0;
}

/* Style direct children of .constraint to handle wrapping and spacing */
.constraint > input[type="number"],
.constraint > select,
.constraint > span {
    margin-bottom: 5px; /* Add space below items if they wrap to a new line */
}

/* Input fields and select elements - General styling */
input[type="number"], select {
    width: 60px; /* Default reduced width to fit more items */
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
    text-align: center;
    font-size: 0.95rem; /* Slightly smaller font for inputs */
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
    box-sizing: border-box;
}

/* Specific styling for the spans (x_i and +) within a constraint */
.constraint > span {
    font-weight: 500;
    color: #333;
    white-space: nowrap; /* Keep "x" and its number, or "+" sign, from breaking */
    padding: 0 2px; /* Add a little horizontal padding around spans */
}

/* --- START: Custom widths for specific select elements --- */
/* Make the objective type select ("Loại bài toán") wider */
.form-group select[name="objective_type"] {
    width: 80px; /* Adjust this value as needed */
}

/* Make the variable type selects ("Loại biến") wider */
.form-group select[name^="var_type"] {
    width: 77px; /* Adjust this value as needed */
}
/* --- END: Custom widths for specific select elements --- */


input[type="number"]:focus, select:focus {
    border-color: #4CAF50;
    box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);
    outline: none;
}

button {
    background-color: #4CAF50;
    color: white;
    padding: 12px 25px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    transition: background-color 0.3s ease, transform 0.2s ease;
    margin-top: 10px;
}

button:hover {
    background-color: #45a049;
    transform: translateY(-2px);
}

button[name="update"] {
    background-color: #5dade2;
}

button[name="update"]:hover {
    background-color: #3498db;
}

.error {
    color: #e74c3c;
    background-color: #fddfdf;
    font-weight: bold;
    margin-bottom: 20px;
    padding: 15px;
    border: 1px solid #e74c3c;
    border-radius: 5px;
    text-align: center;
}

/* Responsive adjustments for smaller screens */
@media (max-width: 768px) {
    body {
        padding: 10px 0;
    }
    .container {
        margin: 20px 10px;
        padding: 20px;
    }

    h1 { font-size: 1.6rem; }
    h2 { font-size: 1.4rem; }
    h3 { font-size: 1.2rem; }

    .form-group {
        padding: 15px;
    }
    
    .coefficients {
        gap: 8px; /* Reduce gap on smaller screens */
    }
    
    /* For constraints on smaller screens */
    .constraint {
        gap: 8px; /* Adjust gap for constraint items */
    }
    
    .constraint > input[type="number"],
    .constraint > select {
        min-width: 55px; 
        flex-grow: 1; 
        flex-basis: 70px; 
    }

    /* Make inputs and selects in .coefficients and .form-group (for var_type) stack better */
    .coefficients label,
    .form-group > label { 
        flex-basis: 100%; 
        margin-bottom: 3px;
    }
    .coefficients input[type="number"] {
        width: 100%; 
        flex-basis: auto; 
    }

    /* For specific selects on small screens, let them take full width for better usability */
    .form-group select[name="objective_type"],
    .form-group select[name^="var_type"] {
        width: 100%;
        flex-basis: auto; /* Reset flex-basis if width is 100% */
    }
     /* General rule for other selects directly under form-group on mobile */
    .form-group > select:not([name="objective_type"]):not([name^="var_type"]) {
        width: 100%;
        flex-basis: auto;
    }


    button {
        width: 100%;
        padding: 12px 15px;
    }
}

@media (max-width: 480px) { /* Even smaller screens */
    input[type="number"], select:not([name="objective_type"]):not([name^="var_type"]) { /* Exclude specific selects from this very small sizing if they are handled by width: 100% above */
        font-size: 0.9rem; 
        padding: 6px;
        width: 50px; 
    }
    .constraint > input[type="number"],
    .constraint > select {
        flex-basis: 60px;
        min-width: 50px;
    }
    h1 { font-size: 1.4rem; }
    h2 { font-size: 1.2rem; }
    h3 { font-size: 1.1rem; }
}
